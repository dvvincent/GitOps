apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: webapp
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: webapp
          image: nginx:latest
          ports:
            - containerPort: 80
          env:
            - name: ENVIRONMENT
              value: production
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: url
          volumeMounts:
            # Mounting the NGINX configuration file from the ConfigMap
            - name: config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            # Mounting the index.html from the ConfigMap
            - name: web-content
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
            # Mounting the NGINX log volume
            - name: log-volume
              mountPath: /var/log/nginx
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5

        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-storage
              mountPath: /data
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10

        - name: prometheus-node-exporter
          image: prom/node-exporter:latest
          ports:
            - containerPort: 9100
              name: metrics
          resources:
            requests:
              memory: "50Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "200m"

      volumes:
        # ConfigMap containing the NGINX configuration and index.html
        - name: config-volume
          configMap:
            name: nginx-config
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
        - name: log-volume
          persistentVolumeClaim:
            claimName: nginx-log-pvc
        - name: web-content
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: webapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-log-pvc
  namespace: webapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: webapp
type: Opaque
data:
  url: cGxhY2Vob2xkZXItdXJs # This is a placeholder value encoded in base64; replace it with your actual URL encoded in base64
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress
  namespace: webapp
  annotations:
    kubernetes.io/ingress.class: "traefik"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
    - host: webapp.happynoises.work
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp
                port:
                  number: 80
  tls:
    - hosts:
        - webapp.happynoises.work
      secretName: wildcard-happynoises-work-tls
